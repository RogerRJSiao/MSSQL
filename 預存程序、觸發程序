=== 預存程序 stored procedures ===
-- 建立預存程序: DB > 可程式性 > 預存程序
CREATE PROC[EDURE] spName01
  WITH RECOMPILE, ENCRYPTION  -- 編譯, 加密
AS
BEGIN
  ...
  ...
END
GO

CREATE PROC[EDURE] spName02
  @para01 varchar(1),  -- 若有參數傳遞放這裡
  @para02 int = 30,
  @para03 bonus = 3000
AS
BEGIN
  ...
  ...
  RETURN @para05  -- 回傳參數
END
GO

-- RETURN 也可以用在回傳錯誤訊息
SET @errorNo = @@ERROR
IF @errorNo <> 0
  BEGIN
    IF ...
    ELSE ...
  RETURN @errorNo

-- 執行預存程序
DECLARE @proc_name char(32)
SET @proc_name = 'spName01'
EXEC[UTE] @proc_name  -- 無參數傳遞

EXEC spName02 @para01 = 'F'  -- 有參數傳遞
或 EXEC spName02 'M', DEFAULT, 50000  -- 有參數傳遞，預設或取代

-- 建立暫存預存程序: 存在 tempdb 系統
CREATE PROC #spName02 AS ...  -- 區域暫存
或 CREATE PROC ##spName03 AS ...  -- 全域暫存

-- 刪除預存程序
DROP PREC spName02


=== 觸發程序 trigger ===
-- 使用時機: 自動更改或刪除相互關聯的資料、加強驗證具有商業規則欄位、比對資料表更改前後狀態及完整性
-- 觸發種類: 1.DML觸發 [自動生成 Deleted 或 Inserted] 2.DDL觸發  3.LOGON觸發
-- 可用於 table 或 view

CREATE TRIGGER triName01
ON tb01
FOR INSERT
AS
BEGIN
  ...
END  

-- AFTER 觸發程序
CREATE TRIGGER triName02
ON tb02
AFTER INSERT  -- 只會新增至 Inserted
AS
BEGIN
  ...
  ...
  RAISERROR(...)
  ROLLBACK [TRAN]
END

CREATE TRIGGER triName03
ON tb03
AFTER UPDATE  -- 新增至 Inserted (更新後資料)、Deleted (更新前資料)
AS
BEGIN
  ...
  ...
  RAISERROR(...)
  ROLLBACK [TRAN]
END

CREATE TRIGGER triName04
ON tb04
AFTER DELETE  -- 新增至 Deleted (更新前資料)
AS
BEGIN
  ...
  ...
  RAISERROR(...)
  ROLLBACK [TRAN]
END

--- 修改 DML 觸發
ALTER TRIGGER triName05
ON tb05
AFTER DELETE  --- UPDATE, INSERT  
AS
BEGIN
  ...
  ...
  RAISERROR(...)
  ROLLBACK [TRAN]
END

--- 停用 DML 觸發
ALTER TABLE tb06 
DISABLE TRIGGER triName06, triName07

--- 刪除 DML 觸發
DROP TABLE triName08
